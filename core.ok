\ core.ok - basic definitions for okami
\ Copyright (C) 2018 Wolfgang Jaehrling
\
\ ISC License
\
\ Permission to use, copy, modify, and/or distribute this software for any
\ purpose with or without fee is hereby granted, provided that the above
\ copyright notice and this permission notice appear in all copies.
\
\ THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
\ WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
\ MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
\ ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
\ WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
\ ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
\ OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

entry : docol, [entry docol, exit]
: ; [lit exit , exit]

: here [hp @];
: 0, [0 ,];

: mark> [here 0,];
: resolve> [here swap !];

: if [[0branch] mark>];
: then [resolve>];
: else [[branch] mark> >r resolve> r>];

: begin [here];
: while [[0branch] mark>];
: repeat [[branch] swap , resolve>];

: create [entry dopush,];
: with [[entry dodoes, lit] mark> [,]];
: does [[exit] resolve>];

: const with [,] does [@];
: var [create 0,];

4 const cell
: cells [cell *];
: cell+ [cell +];
: cell- [cell -];
: #cells [cell /];

-1 const true
0  const false
: on  [true  swap !];
: off [false swap !];

: 1+ [1 +];
: 1- [1 -];
: 1+! [dup @ 1+ swap !];
: 0= [0 =];
: 0=? [dup 0 =];
: 0<> [0 <>];
: 0<>? [dup 0 <>];
: negate [0 swap -];

: ' [word find];
: alias [here  ' hp ! entry  hp !];

: ? [@ .];
: bye [0 sysexit];

: 2drop [drop drop];

: cr [10 emit];
: space [32 emit];
: char [key drop key];

: abs [dup 0 <] if [negate] then ;  \ TODO: simplify with <? once available

: max [2dup >] if [drop] else [nip] then ;
: min [2dup <] if [drop] else [nip] then ;

: mod [/mod drop];

: array with [cells allot] does [swap cells +];

: aligned \ value alignment --
    [2dup mod 0=?] if [2drop] else [- +] then ;
: align [hp @ swap aligned hp !];

: (read-delimited) [key >r] begin [key r@ <>?] while [b,] repeat [drop rdrop];
: (write-strlen) \ str-addr --
    [here over - #cells 1- swap !];
: str with [mark>  key drop  (read-delimited)  cell align  (write-strlen)];
      does [];

: str. [cell+] begin [dup b@ dup 0<>] while [emit 1+] repeat [2drop];
: str<> [str= not];

str (undef-defer) "deferred word used but not defined."
: undef-defer [(undef-defer) str. cr];
: defer [: [undef-defer exit]];
: is [cell+ !];
defer }
' } const '}

: }struct with [,] does [@ here swap allot const];
' }struct const '}struct
: struct{ [0  '}struct '} is];
: field with [over , +] does [@ +];
: offset [dup const];
