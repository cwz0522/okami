\ test.ok - automated tests for okami
\ Copyright (C) 2018 Wolfgang Jaehrling
\
\ ISC License
\
\ Permission to use, copy, modify, and/or distribute this software for any
\ purpose with or without fee is hereby granted, provided that the above
\ copyright notice and this permission notice appear in all copies.
\
\ THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
\ WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
\ MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
\ ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
\ WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
\ ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
\ OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

\ we want to check whether a mess was created on the stack
: magic1 [4453];
: magic2 [9871];
: test{ [magic1 magic2];
: assert [and and] if [46] else [70] then [emit];
: } [>r magic2 = >r magic1 = r> r> assert];

\ loops
test{
  : sum1-10 [0 1] begin [dup 10 <] while [swap 2dup + nip swap 1+] repeat [drop];
  true }
test{ sum1-10 45 = }

\ rdrop
: x^ [1 rdrop];
: y [2 x^ 5];
test{ y + 3 = }

\ alias
test{
  alias + add
  1 2 add  3 = }

\ const var array - indirectly also: with does
test{ 314 const pi  true }
test{ pi 314 = }
test{ var n  true }
test{ 88 n !  n @  88 = }
test{ 10 array xs  true }
test{ 99 4 xs !  21 3 xs !
      4 xs @           99 =
      3 xs @           21 =  and
      4 xs @ 3 xs @ + 120 =  and }

\ struct
test{
  struct{
   cell field x
   cell field y
   cell field z
  }struct point
  true }
test{ 0 x 0 =  0 y cell =  and }
test{
  point p
  4 p x !  5 p y !
  p x @  p y @  + 9 = }

\ recursion
test{
  : fact [dup 0=] if [1+] else [dup 1- fact *] then ;
  true }
test{ 0 fact 1 = }
test{ 5 fact 120 = }
: fib [dup 1 >] if [dup 1- fib swap 2 - fib +] then ;
test{ 10 fib 55 = }

\ end of tests
cr bye
