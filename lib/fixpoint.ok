\ fixpoint.ok - fixed point arithmetic
\ Copyright (C) 2018 Wolfgang Jaehrling
\
\ ISC License
\
\ Permission to use, copy, modify, and/or distribute this software for any
\ purpose with or without fee is hereby granted, provided that the above
\ copyright notice and this permission notice appear in all copies.
\
\ THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
\ WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
\ MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
\ ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
\ WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
\ ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
\ OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

1000 const: fixbase
: >fix [fixbase *];
: fix> [fixbase /];

: fix* [* fixbase /];
: fix/ [fixbase dup * swap / fix*];

: % [fixbase * 100 /];

private{
str: buf "-2147483.648xxx" \ longest number
var: target
: 0target   [buf cell+ target !];
: #cells    [cell 1- + cell /];
: len!      [target @ buf - #cells 1-  buf !];
: emit'     [target @ c!+ target !];
: terminate [0 emit'   len!   0 emit'   0 emit'   0 emit'];
: ?sign     [0<?] if {char} - [emit' 0 swap -] then ;
: 0^        [0=?] if {char} 0 [emit' drop rdrop] then ;
: digit1    [10 mod] {char} 0 [+ emit'];
: n.''      [0<>?] if [dup 10 / n.'' digit1] else [drop] then ;
: n.'       [0^ n.''];
: -zero     [0=?] if [drop 1] then ;
: 0s.       [dup -zero] begin [10 * fixbase <?] while {char} 0 [emit'] repeat [drop];
: convert   [0target ?sign   fixbase /mod n.'] {char} . [emit' 0s. n.' terminate]; 
}in{
: fix.    [convert      buf str.];
: fix>str [convert here buf str,];
}
